# Source Makefile.am

noinst_DATA = pforth
EXTRA_DIST = $(host_SRCS) pforth
DISTCLEANFILES = highlevel.fs

highlevel.fs: $(srcdir)/../highlevel.fs.in
	cd $(top_builddir); ./config.status --file=src/highlevel.fs

include $(srcdir)/../host_src.am

BUILD_PFORTH = $(BUILD_EXECUTOR) $(BUILD_EXECUTOR_FLAGS) $(abs_top_srcdir)/src/$(build_flavour)/pforth

host_SRCS = $(portable_SRCS) \
	accept.fs assembler.fs bracket-does.fs call-cells.fs code.fs		\
	compiler1.fs compiler.fs compiler-postpone.fs extra-primitives.fs	\
	fileio.fs init-space.fs initialize.fs native-call.fs os-compiler.fs	\
	os.fs parse-command-line.fs platform.fs primitives.fs			\
	relocate-compiler.fs resolver-branch.fs save.fs strings2a.fs		\
	strings2b.fs system-params.fs terminal.fs util.fs

do_build = \
	if test $(srcdir) != $(builddir); then \
	    for i in $(host_SRCS); do \
		$(LN_S) -f $(abs_top_srcdir)/src/$(host)/"$$i" . ; \
	    done; \
	fi && \
	$(BUILD_PFORTH) --evaluate "$$MINIMAL_PRIMITIVES" make.fs

# Build (with triple test if building on host)
pforth: $(host_SRCS) highlevel.fs
	$(do_build) && \
	if test "$(host)" = "$(build)" -a "$(target)" = "$(host)"; then \
		mv pforth-new pforth-new-0 && \
		$(BUILD_EXECUTOR) $(BUILD_EXECUTOR_FLAGS) pforth-new-0 --evaluate "$$MINIMAL_PRIMITIVES" make.fs && \
		cmp pforth-new pforth-new-0 && \
		rm pforth-new-0; \
	fi && \
	mv pforth-new $@

check-local:
	$(do_build) && \
	cmp pforth pforth-new && \
	rm pforth-new

loc-local:
	cd $(srcdir) && $(CLOC) $(CLOC_OPTS) $(host_SRCS)
