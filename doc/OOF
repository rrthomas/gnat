Object-oriented Forth syntax

CREATE[ ... ] for per-instance declarations. Need non-parsing versions of
VARIABLE, VALUE etc. Then can say e.g.

    CREATE[ S" FOO" VARIABLE 42 S" BAR" VALUE ]

DOES[ ... ] for methods. Go into interpretation mode after DOES[ and compile
into a (per-class) private dictionary.

DOES> and CREATE work as normal: CREATE is effectively CREATE[ ] and DOES> is
DOES[ : DOES-METHOD ... ; DEFAULT ].

DEFAULT after a declaration in CREATE[ ... ] or DOES[ ... ] makes that method
the default.

Modify the parser to allow the following syntax:

object		executes default method of object
object.method	executes method of object
class_method	executes method of class on the object on the stack
O' object	returns the object pointer of object.

Can parse the top three after attempting to parse a token as a number (should
be before for efficiency, but after for ANS compatibility; and yet not, as if
no non-ANSI object words are created, this effect will not occur).
